# Copyright (C) 2006 International Business Machines and others.
# All Rights Reserved.
# This file is distributed under the Common Public License.

## $Id$

# Author:  Laszlo Ladanyi   IBM  2006-06-20

AUTOMAKE_OPTIONS = foreign

########################################################################
#                               libBcp                                 #
########################################################################

# Name of the library compiled in this directory.  We want it to be installed
# in the 'lib' directory
lib_LTLIBRARIES = libBcp.la

# List all source files for this library, including headers
libBcp_la_SOURCES =
libBcp_la_SOURCES += CG/BCP_cg_user.cpp
libBcp_la_SOURCES += CG/BCP_cg_param.cpp
libBcp_la_SOURCES += CG/BCP_cg.cpp
libBcp_la_SOURCES += CG/BCP_cg_main.cpp
libBcp_la_SOURCES += LP/BCP_lp_fathom.cpp
libBcp_la_SOURCES += LP/BCP_lp_branch.cpp
libBcp_la_SOURCES += LP/BCP_lp_branching.cpp
libBcp_la_SOURCES += LP/BCP_lp_misc.cpp
libBcp_la_SOURCES += LP/BCP_lp_main_loop.cpp
libBcp_la_SOURCES += LP/BCP_lp_msgproc.cpp
libBcp_la_SOURCES += LP/BCP_lp_user.cpp
libBcp_la_SOURCES += LP/BCP_lp_generate_vars.cpp
libBcp_la_SOURCES += LP/BCP_lp_msg_node_rec.cpp
libBcp_la_SOURCES += LP/BCP_lp_node.cpp
libBcp_la_SOURCES += LP/BCP_lp_create_lp.cpp
libBcp_la_SOURCES += LP/BCP_lp_msg_node_send.cpp
libBcp_la_SOURCES += LP/BCP_lp_convert_OsiWarmStart.cpp
libBcp_la_SOURCES += LP/BCP_lp_result.cpp
libBcp_la_SOURCES += LP/BCP_lp_generate_cuts.cpp
libBcp_la_SOURCES += LP/BCP_lp_colrow.cpp
libBcp_la_SOURCES += LP/BCP_lp.cpp
libBcp_la_SOURCES += LP/BCP_lp_main.cpp
libBcp_la_SOURCES += LP/BCP_lp_pool.cpp
libBcp_la_SOURCES += LP/BCP_lp_param.cpp
libBcp_la_SOURCES += TM/BCP_tm_trimming.cpp
libBcp_la_SOURCES += TM/BCP_tm_msg_node_send.cpp
libBcp_la_SOURCES += TM/BCP_tm_msg_node_rec.cpp
libBcp_la_SOURCES += TM/BCP_tm_param.cpp
libBcp_la_SOURCES += TM/BCP_tm_user.cpp
libBcp_la_SOURCES += TM/BCP_tm_commandline.cpp
libBcp_la_SOURCES += TM/BCP_tm_node.cpp
libBcp_la_SOURCES += TM/BCP_tm_msgproc.cpp
libBcp_la_SOURCES += TM/BCP_tm_functions.cpp
libBcp_la_SOURCES += TM/BCP_tm_main.cpp
libBcp_la_SOURCES += TM/BCP_tm_statistics.cpp
libBcp_la_SOURCES += TM/BCP_tm.cpp
libBcp_la_SOURCES += VG/BCP_vg_param.cpp
libBcp_la_SOURCES += VG/BCP_vg_user.cpp
libBcp_la_SOURCES += VG/BCP_vg_main.cpp
libBcp_la_SOURCES += VG/BCP_vg.cpp
libBcp_la_SOURCES += Member/BCP_solution.cpp
libBcp_la_SOURCES += Member/BCP_process.cpp
libBcp_la_SOURCES += Member/BCP_node_change.cpp
libBcp_la_SOURCES += Member/BCP_indexed_pricing.cpp
libBcp_la_SOURCES += Member/BCP_USER.cpp
libBcp_la_SOURCES += Member/BCP_warmstart_basis.cpp
libBcp_la_SOURCES += Member/BCP_branch.cpp
libBcp_la_SOURCES += Member/BCP_vector_sanity.cpp
libBcp_la_SOURCES += Member/BCP_cut.cpp
libBcp_la_SOURCES += Member/BCP_obj_change.cpp
libBcp_la_SOURCES += Member/BCP_warmstart_dual.cpp
libBcp_la_SOURCES += Member/BCP_matrix.cpp
libBcp_la_SOURCES += Member/BCP_problem_core.cpp
libBcp_la_SOURCES += Member/BCP_warmstart_pack.cpp
libBcp_la_SOURCES += Member/BCP_matrix_pack.cpp
libBcp_la_SOURCES += Member/BCP_var.cpp
libBcp_la_SOURCES += Member/BCP_vector_bool.cpp
libBcp_la_SOURCES += Member/BCP_vector_char.cpp
libBcp_la_SOURCES += Member/BCP_vector_double.cpp
libBcp_la_SOURCES += Member/BCP_vector_int.cpp
libBcp_la_SOURCES += Member/BCP_vector_short.cpp
libBcp_la_SOURCES += include/BCP_msvc.hpp
libBcp_la_SOURCES += include/BCP_vg_param.hpp
libBcp_la_SOURCES += include/BCP_message.hpp
libBcp_la_SOURCES += include/BCP_solution.hpp
libBcp_la_SOURCES += include/BCP_vector_change.hpp
libBcp_la_SOURCES += include/BCP_lp_branch.hpp
libBcp_la_SOURCES += include/BCP_process.hpp
libBcp_la_SOURCES += include/BCP_node_change.hpp
libBcp_la_SOURCES += include/BCP_indexed_pricing.hpp
libBcp_la_SOURCES += include/BCP_vector.hpp
libBcp_la_SOURCES += include/BCP_vector_char.hpp
libBcp_la_SOURCES += include/BCP_tm_param.hpp
libBcp_la_SOURCES += include/BCP_USER.hpp
libBcp_la_SOURCES += include/BCP_vg_user.hpp
libBcp_la_SOURCES += include/BCP_lp_main_loop.hpp
libBcp_la_SOURCES += include/BCP_warmstart_basis.hpp
libBcp_la_SOURCES += include/BCP_tm_user.hpp
libBcp_la_SOURCES += include/BCP_lp_user.hpp
libBcp_la_SOURCES += include/BCP_branch.hpp
libBcp_la_SOURCES += include/BCP_warmstart.hpp
libBcp_la_SOURCES += include/BCP_vector_sanity.hpp
libBcp_la_SOURCES += include/BCP_cut.hpp
libBcp_la_SOURCES += include/BCP_message_tag.hpp
libBcp_la_SOURCES += include/BCP_tm_node.hpp
libBcp_la_SOURCES += include/BCP_cg_user.hpp
libBcp_la_SOURCES += include/BCP_set_intersects.hpp
libBcp_la_SOURCES += include/BCP_cg_param.hpp
libBcp_la_SOURCES += include/BCP_obj_change.hpp
libBcp_la_SOURCES += include/BCP_warmstart_dual.hpp
libBcp_la_SOURCES += include/BCP_vector_int.hpp
libBcp_la_SOURCES += include/BCP_lp_node.hpp
libBcp_la_SOURCES += include/BCP_string.hpp
libBcp_la_SOURCES += include/BCP_matrix.hpp
libBcp_la_SOURCES += include/BCP_parameters.hpp
libBcp_la_SOURCES += include/BCP_enum.hpp
libBcp_la_SOURCES += include/BCP_enum_branch.hpp
libBcp_la_SOURCES += include/BCP_vector_general.hpp
libBcp_la_SOURCES += include/BCP_lp_functions.hpp
libBcp_la_SOURCES += include/BCP_functions.hpp
libBcp_la_SOURCES += include/BCP_vector_short.hpp
libBcp_la_SOURCES += include/BCP_cygwin.hpp
libBcp_la_SOURCES += include/BCP_problem_core.hpp
libBcp_la_SOURCES += include/BCP_vector_double.hpp
libBcp_la_SOURCES += include/BCP_lp_result.hpp
libBcp_la_SOURCES += include/BCP_main_fun.hpp
libBcp_la_SOURCES += include/BCP_tm_functions.hpp
libBcp_la_SOURCES += include/BCP_error.hpp
libBcp_la_SOURCES += include/BCP_linux.hpp
libBcp_la_SOURCES += include/BCP_enum_tm.hpp
libBcp_la_SOURCES += include/BCP_MACH.hpp
libBcp_la_SOURCES += include/BCP_enum_process_t.hpp
libBcp_la_SOURCES += include/BCP_cg.hpp
libBcp_la_SOURCES += include/BCP_vector_bool.hpp
libBcp_la_SOURCES += include/BCP_lp.hpp
libBcp_la_SOURCES += include/BCP_mempool.hpp
libBcp_la_SOURCES += include/BCP_bluegene_xlc.hpp
libBcp_la_SOURCES += include/BCP_var.hpp
libBcp_la_SOURCES += include/BCP_lp_pool.hpp
libBcp_la_SOURCES += include/BCP_os.hpp
libBcp_la_SOURCES += include/BCP_buffer.hpp
libBcp_la_SOURCES += include/BCP_lp_param.hpp
libBcp_la_SOURCES += include/BCP_sunos.hpp
libBcp_la_SOURCES += include/BCP_aix43.hpp
libBcp_la_SOURCES += include/BCP_freebsd.hpp
libBcp_la_SOURCES += include/BCP_tm.hpp
libBcp_la_SOURCES += include/BCP_vg.hpp
libBcp_la_SOURCES += include/BCP_vector_bool.hpp
libBcp_la_SOURCES += include/BCP_vector_char.hpp
libBcp_la_SOURCES += include/BCP_vector_double.hpp
libBcp_la_SOURCES += include/BCP_vector_int.hpp
libBcp_la_SOURCES += include/BCP_vector_short.hpp
libBcp_la_SOURCES += include/BcpConfig.h

libBcp_la_SOURCES += Member/BCP_message_single.cpp
libBcp_la_SOURCES += include/BCP_message_single.hpp

if COIN_HAS_MPI
libBcp_la_SOURCES += Member/BCP_message_mpi.cpp
libBcp_la_SOURCES += include/BCP_message_mpi.hpp
endif
#if COIN_HAS_PVM
#libBcp_la_SOURCES += Member/BCP_message_pvm.cpp
#libBcp_la_SOURCES += include/BCP_message_pvm.hpp
#endif

# This is for libtool (on Windows)
libBcp_la_LDFLAGS = $(LT_LDFLAGS)

########################################################################
#                            Additional flags                          #
########################################################################

# Here list all include flags, relative to this "srcdir" directory.  This
# "cygpath" stuff is necessary to compile with native compilers on Windows.
AM_CPPFLAGS = 
AM_CPPFLAGS += -I`$(CYGPATH_W) $(COINUTILSSRCDIR)/src`
AM_CPPFLAGS += -I`$(CYGPATH_W) $(OSISRCDIR)/src`

# Include MPI header directory if MPI is used
if COIN_HAS_MPI
AM_CPPFLAGS +=  -I`$(CYGPATH_W) $(MPIINCDIR)`
endif

# Include PVM header directory if PVM is used
#if COIN_HAS_PVM
#AM_CPPFLAGS +=  -I`$(CYGPATH_W) $(PVMINCDIR)`
#endif

# This line is necessary to allow VPATH compilation with MS compilers
# on Cygwin
DEFAULT_INCLUDES = -I. -I`$(CYGPATH_W) $(srcdir)/include` -I$(top_builddir)/inc

########################################################################
#                Headers that need to be installed                     #
########################################################################

# Here list all the header files that are required by a user of the library,
# and that therefore should be installed in 'install'
include_HEADERS =
include_HEADERS += ../inc/config_bcp.h
include_HEADERS += include/BCP_msvc.hpp
include_HEADERS += include/BCP_vg_param.hpp
include_HEADERS += include/BCP_message.hpp
include_HEADERS += include/BCP_solution.hpp
include_HEADERS += include/BCP_vector_change.hpp
include_HEADERS += include/BCP_lp_branch.hpp
include_HEADERS += include/BCP_message_pvm.hpp
include_HEADERS += include/BCP_process.hpp
include_HEADERS += include/BCP_node_change.hpp
include_HEADERS += include/BCP_indexed_pricing.hpp
include_HEADERS += include/BCP_vector.hpp
include_HEADERS += include/BCP_vector_char.hpp
include_HEADERS += include/BCP_tm_param.hpp
include_HEADERS += include/BCP_USER.hpp
include_HEADERS += include/BCP_vg_user.hpp
include_HEADERS += include/BCP_lp_main_loop.hpp
include_HEADERS += include/BCP_warmstart_basis.hpp
include_HEADERS += include/BCP_tm_user.hpp
include_HEADERS += include/BCP_lp_user.hpp
include_HEADERS += include/BCP_branch.hpp
include_HEADERS += include/BCP_warmstart.hpp
include_HEADERS += include/BCP_vector_sanity.hpp
include_HEADERS += include/BCP_cut.hpp
include_HEADERS += include/BCP_message_tag.hpp
include_HEADERS += include/BCP_tm_node.hpp
include_HEADERS += include/BCP_cg_user.hpp
include_HEADERS += include/BCP_set_intersects.hpp
include_HEADERS += include/BCP_cg_param.hpp
include_HEADERS += include/BCP_obj_change.hpp
include_HEADERS += include/BCP_warmstart_dual.hpp
include_HEADERS += include/BCP_vector_int.hpp
include_HEADERS += include/BCP_lp_node.hpp
include_HEADERS += include/BCP_string.hpp
include_HEADERS += include/BCP_matrix.hpp
include_HEADERS += include/BCP_parameters.hpp
include_HEADERS += include/BCP_enum.hpp
include_HEADERS += include/BCP_enum_branch.hpp
include_HEADERS += include/BCP_vector_general.hpp
include_HEADERS += include/BCP_lp_functions.hpp
include_HEADERS += include/BCP_functions.hpp
include_HEADERS += include/BCP_vector_short.hpp
include_HEADERS += include/BCP_message_mpi.hpp
include_HEADERS += include/BCP_cygwin.hpp
include_HEADERS += include/BCP_problem_core.hpp
include_HEADERS += include/BCP_message_single.hpp
include_HEADERS += include/BCP_vector_double.hpp
include_HEADERS += include/BCP_lp_result.hpp
include_HEADERS += include/BCP_main_fun.hpp
include_HEADERS += include/BCP_tm_functions.hpp
include_HEADERS += include/BCP_error.hpp
include_HEADERS += include/BCP_linux.hpp
include_HEADERS += include/BCP_enum_tm.hpp
include_HEADERS += include/BCP_MACH.hpp
include_HEADERS += include/BCP_enum_process_t.hpp
include_HEADERS += include/BCP_cg.hpp
include_HEADERS += include/BCP_vector_bool.hpp
include_HEADERS += include/BCP_lp.hpp
include_HEADERS += include/BCP_mempool.hpp
include_HEADERS += include/BCP_bluegene_xlc.hpp
include_HEADERS += include/BCP_var.hpp
include_HEADERS += include/BCP_lp_pool.hpp
include_HEADERS += include/BCP_os.hpp
include_HEADERS += include/BCP_buffer.hpp
include_HEADERS += include/BCP_lp_param.hpp
include_HEADERS += include/BCP_sunos.hpp
include_HEADERS += include/BCP_aix43.hpp
include_HEADERS += include/BCP_freebsd.hpp
include_HEADERS += include/BCP_tm.hpp
include_HEADERS += include/BCP_vg.hpp
include_HEADERS += include/BcpConfig.h

#############################################################################
# Create the Config.h file that always defines HAVE_CONFIG_H and install it #
#############################################################################

# You only need to adapt the following line
ConfigHeader = BcpConfig.h

install-exec-local:
	echo "#ifndef HAVE_CONFIG_H" >bla
	echo "#define HAVE_CONFIG_H" >>bla
	echo "#endif" >> bla
	cat $(srcdir)/$(ConfigHeader) >> bla
	$(install_sh_DATA) bla $(DESTDIR)$(includedir)/$(ConfigHeader)
	rm -f bla

uninstall-local:
	rm -f $(DESTDIR)$(includedir)/$(ConfigHeader)
